-- ---
-- params:
-- - name: base_table
-- - name: WAREHOUSE
-- - name: days
--   default: 90
-- - name: time_column
-- - name: groups
-- - name: limit
--   default: 100
-- varmap: 
--   {}



--COUNT_HOURLY_TABLE_SQL
CREATE OR REPLACE TABLE {base_table}_counts (
  slice_start timestamp_ltz,
  slice_end timestamp_ltz,
  groups variant,
  n number
)
;

-- COUNT_HOURLY_TASK_SQL 
CREATE OR REPLACE TASK {base_table}_count
  SCHEDULE='USING CRON 0 * * * * UTC'
  WAREHOUSE={WAREHOUSE}
AS
MERGE INTO {base_table}_counts stored USING (
  -- calculate sums
  SELECT
    COUNT(*) n,
    slice_start,
    slice_end,
    groups
  FROM
    (
      -- make the slices
      SELECT
        slice_start,
        slice_end
      FROM
        TABLE
        (data.TIME_SLICES_BEFORE_T
            (
                {days} * 24,
                60 * 60,
                DATE_TRUNC(HOUR, CURRENT_TIMESTAMP)
            )
        )
    ) t
    JOIN (
      -- calculate sums in those slices
      SELECT
        {time_column} event_time,
        {groups} AS groups
      FROM
        {base_table}
    ) c 
    ON c.event_time BETWEEN t.slice_start
    AND t.slice_end
  GROUP BY
    slice_start,
    slice_end,
    groups
) calcd 
ON (
  stored.groups = calcd.groups
  AND stored.slice_start = calcd.slice_start
  AND stored.slice_end = calcd.slice_end
)
WHEN NOT MATCHED THEN
INSERT (
    slice_start, 
    slice_end, 
    groups, 
    n
)
VALUES (
    slice_start, 
    slice_end, 
    groups, 
    n
)

ALTER TASK {base_table}_count RESUME;


-- BASIC_BASELINE_VIEW 
CREATE OR REPLACE VIEW {base_table}_pct_baseline AS
SELECT * FROM (
  SELECT slice_start hour
       , groups
       , n
       , APPROX_PERCENTILE(n, .01) OVER (PARTITION BY groups) pct01
       , APPROX_PERCENTILE(n, .05) OVER (PARTITION BY groups) pct05
       , APPROX_PERCENTILE(n, .10) OVER (PARTITION BY groups) pct10
       , APPROX_PERCENTILE(n, .50) OVER (PARTITION BY groups) pct50
       , APPROX_PERCENTILE(n, .90) OVER (PARTITION BY groups) pct90
       , APPROX_PERCENTILE(n, .95) OVER (PARTITION BY groups) pct95
       , APPROX_PERCENTILE(n, .99) OVER (PARTITION BY groups) pct99
  FROM (
    -- zero-filled count table
    SELECT ZEROIFNULL(n) n
         , groups
         , slice_start
         , slice_end
    FROM {base_table}_counts
    RIGHT JOIN (
      -- zero filled matrix of (groups X slices)
      SELECT groups, slice_start, slice_end
      FROM (
        SELECT DISTINCT groups
        FROM {base_table}_counts
      ) g
      CROSS JOIN (
        SELECT slice_start, slice_end
        FROM TABLE
        (data.TIME_SLICES_BEFORE_T
            (
                {days} * 24, 60 * 60, DATE_TRUNC(HOUR, CURRENT_TIMESTAMP)
            )
        )
      ) t
    )
    USING (groups, slice_start, slice_end)
    ORDER BY n DESC
    {limit} -- optional limit
  )
  WHERE slice_start > DATEADD(HOUR, -24 * {days}, DATE_TRUNC(HOUR, CURRENT_TIMESTAMP))
)
WHERE hour = (
  SELECT MAX(slice_start)
  FROM {base_table}_counts
)
ORDER BY n DESC
